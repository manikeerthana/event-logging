/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package event.logging.example;

import event.logging.EventLoggingService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.Scanner;

public class AppMain {
    private static final Logger LOGGER = LoggerFactory.getLogger(AppMain.class);

    private final UserContext userContext;
    private final AppService appService;

    private AppMain() {
        // This would normally be done with dependency injection
        final UserContext userContext = new UserContext();
        final EventLoggingService eventLoggingService = new CustomEventLoggingService(userContext);
        this.userContext = userContext;
        this.appService = new AppService(eventLoggingService, userContext);

    }

    public static void main(String[] args) {
        new AppMain().run();
    }

    public void run() {
        LOGGER.info("Running example application");

        appService.loginUser();

        if (appService.showConfirmationBanner()) {
            LOGGER.info("User accepted responsibility, happy days.");
        } else {
            LOGGER.info("User did not accept, what a shame. Quiting!");
            System.exit(1);
        }

        captureJustification();

        appService.performSearch();

        appService.showShutdownBanner();

        appService.logoffUser();

        LOGGER.info("Shutting down now!");
        System.exit(0);
    }

    private void captureJustification() {
        final Scanner scanner = new Scanner(System.in);
        System.out.println("\nEnter the justification for all subsequent actions:");
        final String justification = scanner.nextLine();
        if (justification != null && !justification.isEmpty()) {
            LOGGER.info("Setting justification to\n{}", justification);
            userContext.setJustification(justification);
        }
    }

}
